class MyMath{
	long a, b;
	long add() {
		return a+b;
		
	}
	//클래스 함수 (클래스 로드시에 메모리에 로딩됨, 프로그램 종료시 메모리에서 없어짐)
	/*
	 * 클래스 이름으로 접근 클래스명.함수명
	 * 
	 */
	static long add(long a,long b) {
		return a+b;
		
	}
}
public class Ex20 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		System.out.println(MyMath.add(200L, 100L));
		
		MyMath mm = new MyMath();
		mm.a = 200L;
		mm.b = 100L;
		System.out.println(mm.add());

	}
/*
*변수 : 데이터를 저장할 기억공간의 이름
*
*변수의 종류
*class 변수 : 클래스 영역: 프로그램 시작~ 끝
*instance 변수 : 클래스 영역 : 인스턴스화 이후 (new 이후)
*local 변수 : {} : 선언이후 {}내에서 사용가능
*
*함수 : 어떤 작업을 수행하기위한 수행문들의 집합
*	특징 -코드의 재사용성을 높임, 수정이 용이, 반복코드를 줄여준다
*	사용 -반환형 함수명(매개변수) {수행문}
*	반환형 (반환값):  함수가 수행 후에 넘겨주는 값
*
*return : return 문을 만나면  현재 실행중인 함수 종료후 호출한 함수로 돌아간다.
*return 뒤에 작성된 코드는 실행하지 않음
*
*
*JAVA의 메모리
*모든 실행은 stack에서 시작(지역변수, 참조형변수, 함수호출) 
*new 생성은 heap
*코드 영역: 실행코드 및 클래스, 클래스 변수
*/

}
